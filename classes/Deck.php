<?php

class Deck extends DBHandler{
    protected $sqlFilePath = "sql/decks.json";
    protected $tableName = "Deck";
    private $pk;
    private $name;
    private $cards;
    private $owner;
    private $cardCount;
    private $valid;

    public function get_pk(){
        return $this->pk;
    }

    public function count(){
        if($this->cardCount == null){
            return 0;
        }
        else{
            return $this->cardCount;
        }
        
    }

    public function get_name(){
        return $this->name;
    }

    public function get_cards(){
        return $this->cards;
    }

    public function get_owner(){
        return $this->owner;
    }

    public function is_valid(){
        return $this->valid;
    }

    public function add_card($card){
        if($this->cardCount < 10){
            if($this->cards != null){
                if(!in_array($card, $this->cards)){
                    $card->add_to_deck($this->pk);
                    $this->cards[] = $card;
                    $this->cardCount++;
                    $this->check_valid();
                    return True;
                }
            }
            else{
                $card->add_to_deck($this->pk);
                $this->cards[] = $card;
                $this->cardCount++;
                $this->check_valid();
                return True;
            }
        }
        return False;
    }

    public function remove_card($card){
        if($this->cardCount == 0){
            if(in_array($card, $this->cards)){
                $card->remove_from_deck($this->pk);
                $this->cards = array_diff($this->cards, array($card));
                $this->cardCount--;
                $this->check_valid();
                return True;
            }
        }
        return False;
    }

    public function create_new_deck($name, $owner){
        $this->name = $name;
        $this->owner = $owner;
        $query = "INSERT INTO Deck (name, characterId) VALUES (?, ?);";
        $values = array($this->name, $this->owner->get_uid());
        $types = array("s", "i");
        $this->execute_query($query, $values, $types);
        $this->pk = $this->get_last_insert_id();
    }

    public function __construct(){
        $this->database_setup();
        $this->cards = array();
    }

    public function get_deck_by_pk($pk){
        $query = "SELECT * FROM Deck WHERE pk = ?;";
        $values = array($pk);
        $types = array("i");
        $result = $this->execute_query($query, $values, $types);
        if($result->num_rows > 0){
            $row = $result->fetch_assoc();
            $this->pk = $row["pk"];
            $this->name = $row["name"];
            $char = new Users();
            $char->query_for_user_by_uid($row["characterId"]);
            $this->owner = $char;
            $this->populate_cards();
            return True;
        }
        return False;
    }

    public function delete_deck(){
        $query = "DELETE FROM Deck WHERE pk = ?;";
        $values = array($this->pk);
        $types = array("i");
        $this->execute_query($query, $values, $types);
    }

    public function get_deck_by_name($name, $user){
        $query = "SELECT * FROM Deck WHERE name = ?;";
        $values = array($name);
        $types = array("s");
        $results = $this->execute_query($query, $values, $types);
        if($results->num_rows > 0){
            $row = $results->fetch_assoc();
            $this->pk = $row["pk"];
            $this->name = $row["name"];
            $this->owner = $user;
            $this->cardCount = 0;
            $this->populate_cards($this->pk);
            return True;
        }
        return False;
    }

    public function populate_cards(){
        $query = "SELECT * from Card WHERE deck = ? AND characterId = ?;";
        $values = array($this->pk, $this->owner->get_uid());
        $types = array("ii");
        $results = $this->execute_query($query, $values, $types);
        if($results->num_rows > 0){
            $data = $results->fetch_all(MYSQLI_ASSOC);
            foreach($data as $row){
                $card = new Card();
                $card->populate_from_query($row['pk'], $row['characterId'], $row['cardType'], $row['autoGenerated']);
                array_push($this->cards, $card);
                $this->cardCount++;
            }
        }
        $this->check_valid();
    }

    private function check_valid(){
        if($this->cardCount == 10){
            $this->valid = True;
        }
        else{
            $this->valid = False;
        }
    }
}